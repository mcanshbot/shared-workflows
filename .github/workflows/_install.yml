name: âŽ” Setup node

on:
  workflow_call:
    inputs:
      package-manager:
        required: true
        type: string
      package-manager-version:
        required: true
        type: number
      node-version:
        required: true
        type: number

jobs:
  setup-node:
    name: âŽ” Setup node
    runs-on: ubuntu-latest
      - name: âŽ” Setup node
        if: ${{ inputs.package-manager }} == "npm" || ${{ inputs.package-manager }} == "yarn"
        uses: actions/setup-node@v3
        with:
          cache: ${{ inputs.package-manager }}
          node-version: ${{ inputs.node-version }}

      - name: ðŸŸ§ Install pnpm
        if: ${{ inputs.package-manager }} == "pnpm"
        id: pnpm-install
        uses: pnpm/action-setup@v2
        with:
          version: ${{ inputs.package-manager-version }}
          run_install: false
      
      - name: ðŸŸ§ Get pnpm store directory
        if: ${{ inputs.package-manager }} == "pnpm"
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: ðŸŸ§ Setup pnpm cache
        if: ${{ inputs.package-manager }} == "pnpm"
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: ðŸ“¥ Install deps
        run: npm ci
        if: ${{ inputs.package-manager }} == "npm"

      - name: ðŸ“¥ Install deps
        run: yarn install --frozen-lockfile
        if: ${{ inputs.package-manager }} == "yarn"

      - name: ðŸ“¥ Install deps
        run: pnpm install --frozen-lockfile
        if: ${{ inputs.package-manager }} == "pnpm"